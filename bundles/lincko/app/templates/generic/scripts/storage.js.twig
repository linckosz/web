<script>

	//Because this is loaded at very first
	Lincko.storage = {
		WORKID: null,
		WORKNAME: '{{ workspace }}',
		last_visit: null,
		last_visit_clean: {% if reset_data is empty %}false{% else %}true{% endif %},
		data: {},
		data_abc: {},
		data_nocache: {},
		data_nosql: {{ data_nosql }},
		prepare_data: false,
		thumbnail: {
			image: "{{ _filelatest('/lincko/app/images/app/icons/file_image.png') }}",
			video: "{{ _filelatest('/lincko/app/images/app/icons/file_video.png') }}",
			audio: "{{ _filelatest('/lincko/app/images/app/icons/file_audio.png') }}",
			file: "{{ _filelatest('/lincko/app/images/app/icons/file_file.png') }}",
		},
	};

	{% if onboarding_screen %}
		Lincko.storage.screen = {
			timer: null,
			stop: false,
			running: false,
			options: {
				javascriptEnabled: false,
				allowTaint: false,
				logging: false,
				async: true,
			},
			launch: function(){
				if(Lincko.storage.screen.stop){
					return true;
				}
				var lastvisit = Lincko.storage.getLastVisit();
				if(lastvisit && lastvisit > (Lincko.storage.get('users', wrapper_localstorage.uid, 'created_at') + 180) ){ //Only the first 2min are meanful
					Lincko.storage.screen.stop = true;
					return true;
				} else if(!lastvisit){
					return true;
				}
				if(!Lincko.storage.screen.running){
					clearTimeout(Lincko.storage.screen.timer);
					Lincko.storage.screen.timer = setTimeout(function(){
						Lincko.storage.screen.running = true;
						html2canvas($('body'), Lincko.storage.screen.options).then(function(canvas) {
							var compression = 0.20;
							if(responsive.test("maxMobile")){
								compression = 0.40;
							} else if(responsive.test("maxMobileL")){
								compression = 0.30;
							} else if(responsive.test("maxTablet")){
								compression = 0.25;
							}
							wrapper_sendAction({canvas: canvas.toDataURL('image/jpeg', compression),}, 'post', 'info/beginning');
							Lincko.storage.screen.running = false;
						})
						.catch(function(){
							Lincko.storage.screen.running = false;
						})
						;
					}, 2000);
				}
			},
		};

		var storage_screen_garbage = app_application_garbage.add();
		app_application_lincko.add(storage_screen_garbage, 'first_launch', function() {
			if(Lincko.storage.screen.stop){
				app_application_garbage.remove(storage_screen_garbage);
			} else {
				Lincko.storage.screen.launch();
			}
		});

		JSfiles.finish(function(){
			$('#body_lincko').on('click', function(event){
				Lincko.storage.screen.launch();
			});
		});
	{% endif %}

</script>
